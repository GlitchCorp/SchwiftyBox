name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: schwiftybox_test
          POSTGRES_USER: schwiftybox_user
          POSTGRES_PASSWORD: schwiftybox_password_dev
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install dependencies
      run: |
        cd src
        go mod download

    - name: Run unit tests
      run: |
        cd src
        go test -v ./...

    - name: Create test database
      run: |
        PGPASSWORD=schwiftybox_password_dev psql -h localhost -U schwiftybox_user -d postgres -c "CREATE DATABASE schwiftybox_test;" || echo "Database already exists"

    - name: Run integration tests
      run: |
        cd src
        DB_HOST=localhost DB_PORT=5432 DB_USER=schwiftybox_user DB_PASSWORD=schwiftybox_password_dev DB_NAME=schwiftybox_test JWT_SECRET=test-secret-key go test -v -run TestIntegrationTestSuite ./integration_test.go

    - name: Generate coverage report
      run: |
        cd src
        go test -coverprofile=coverage.out ./...
        go tool cover -func=coverage.out | tail -1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./src/coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
